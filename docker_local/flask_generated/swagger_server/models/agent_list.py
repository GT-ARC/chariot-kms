# coding: utf-8

from __future__ import absolute_import

from typing import List

from swagger_server import util
from swagger_server.models.agent_list_kms import AgentListKMS
from swagger_server.models.agent_mapping import AgentMapping
from swagger_server.models.base_model_ import Model


class AgentList(Model, AgentListKMS):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    
    def __init__(self, id: str = None, mappings: List[AgentMapping] = None):  # noqa: E501
        """AgentList - a model defined in Swagger

        :param id: The id of this AgentList.  # noqa: E501
        :type id: str
        :param mappings: The mappings of this AgentList.  # noqa: E501
        :type mappings: List[AgentMapping]
        """
        self.swagger_types = {
            'id': str,
            'mappings': List[AgentMapping]
        }
        
        self.attribute_map = {
            'id': '_id',
            'mappings': 'mappings'
        }
        self._id = id
        self._mappings = mappings
    
    @classmethod
    def from_dict(cls, dikt) -> 'AgentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AgentList of this AgentList.  # noqa: E501
        :rtype: AgentList
        """
        return util.deserialize_model(dikt, cls)
    
    @property
    def id(self) -> str:
        """Gets the id of this AgentList.


        :return: The id of this AgentList.
        :rtype: str
        """
        return self._id
    
    @id.setter
    def id(self, id: str):
        """Sets the id of this AgentList.


        :param id: The id of this AgentList.
        :type id: str
        """
        
        self._id = id
    
    @property
    def mappings(self) -> List[AgentMapping]:
        """Gets the mappings of this AgentList.


        :return: The mappings of this AgentList.
        :rtype: List[AgentMapping]
        """
        return self._mappings
    
    @mappings.setter
    def mappings(self, mappings: List[AgentMapping]):
        """Sets the mappings of this AgentList.


        :param mappings: The mappings of this AgentList.
        :type mappings: List[AgentMapping]
        """
        if mappings is None:
            raise ValueError("Invalid value for `mappings`, must not be `None`")  # noqa: E501
        
        self._mappings = mappings
