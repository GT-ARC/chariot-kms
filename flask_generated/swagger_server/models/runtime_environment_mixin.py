# coding: utf-8

from __future__ import absolute_import

from swagger_server import util
from swagger_server.models.base_model_ import Model
from swagger_server.models.location_property import LocationProperty  # noqa: F401,E501


class RuntimeEnvironmentMixin(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    
    def __init__(self, reId: str = None, location: LocationProperty = None):  # noqa: E501
        """RuntimeEnvironmentMixin - a model defined in Swagger

        :param reId: The reId of this RuntimeEnvironmentMixin.  # noqa: E501
        :type reId: str
        :param location: The location of this RuntimeEnvironmentMixin.  # noqa: E501
        :type location: LocationProperty
        """
        self.swagger_types = {
            'reId': str,
            'location': LocationProperty
        }
        
        self.attribute_map = {
            'reId': 'reId',
            'location': 'location'
        }
        self._reId = reId
        self._location = location
    
    @classmethod
    def from_dict(cls, dikt) -> 'RuntimeEnvironmentMixin':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RuntimeEnvironmentMixin of this RuntimeEnvironmentMixin.  # noqa: E501
        :rtype: RuntimeEnvironmentMixin
        """
        return util.deserialize_model(dikt, cls)
    
    @property
    def reId(self) -> str:
        """Gets the reId of this RuntimeEnvironmentMixin.

        []  # noqa: E501

        :return: The reId of this RuntimeEnvironmentMixin.
        :rtype: str
        """
        return self._reId
    
    @reId.setter
    def reId(self, reId: str):
        """Sets the reId of this RuntimeEnvironmentMixin.

        []  # noqa: E501

        :param reId: The reId of this RuntimeEnvironmentMixin.
        :type reId: str
        """
        
        self._reId = reId
    
    @property
    def location(self) -> LocationProperty:
        """Gets the location of this RuntimeEnvironmentMixin.


        :return: The location of this RuntimeEnvironmentMixin.
        :rtype: LocationProperty
        """
        return self._location
    
    @location.setter
    def location(self, location: LocationProperty):
        """Sets the location of this RuntimeEnvironmentMixin.


        :param location: The location of this RuntimeEnvironmentMixin.
        :type location: LocationProperty
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")  # noqa: E501
        
        self._location = location
