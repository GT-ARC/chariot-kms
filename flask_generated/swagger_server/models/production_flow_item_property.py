# coding: utf-8

from __future__ import absolute_import

from swagger_server import util
from swagger_server.models.base_model_ import Model
from swagger_server.models.production_flow_item_property_kms import KMSProductionFlowItemProperty


class ProductionFlowItemProperty(Model, KMSProductionFlowItemProperty):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    
    def __init__(self, unit: str = None, writable: bool = None, size: float = None, icon: str = None,
                 error_threshold: float = None, display: bool = None):  # noqa: E501
        """ProductionFlowItemProperty - a model defined in Swagger

        :param unit: The unit of this ProductionFlowItemProperty.  # noqa: E501
        :type unit: str
        :param writable: The writable of this ProductionFlowItemProperty.  # noqa: E501
        :type writable: bool
        :param size: The size of this ProductionFlowItemProperty.  # noqa: E501
        :type size: float
        :param icon: The icon of this ProductionFlowItemProperty.  # noqa: E501
        :type icon: str
        :param error_threshold: The error_threshold of this ProductionFlowItemProperty.  # noqa: E501
        :type error_threshold: float
        :param display: The display of this ProductionFlowItemProperty.  # noqa: E501
        :type display: bool
        """
        self.swagger_types = {
            'unit': str,
            'writable': bool,
            'size': float,
            'icon': str,
            'error_threshold': float,
            'display': bool
        }
        
        self.attribute_map = {
            'unit': 'unit',
            'writable': 'writable',
            'size': 'size',
            'icon': 'icon',
            'error_threshold': 'errorThreshold',
            'display': 'display'
        }
        self._unit = unit
        self._writable = writable
        self._size = size
        self._icon = icon
        self._error_threshold = error_threshold
        self._display = display
    
    @classmethod
    def from_dict(cls, dikt) -> 'ProductionFlowItemProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProductionFlowItemProperty of this ProductionFlowItemProperty.  # noqa: E501
        :rtype: ProductionFlowItemProperty
        """
        return util.deserialize_model(dikt, cls)
    
    @property
    def unit(self) -> str:
        """Gets the unit of this ProductionFlowItemProperty.


        :return: The unit of this ProductionFlowItemProperty.
        :rtype: str
        """
        return self._unit
    
    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this ProductionFlowItemProperty.


        :param unit: The unit of this ProductionFlowItemProperty.
        :type unit: str
        """
        
        self._unit = unit
    
    @property
    def writable(self) -> bool:
        """Gets the writable of this ProductionFlowItemProperty.


        :return: The writable of this ProductionFlowItemProperty.
        :rtype: bool
        """
        return self._writable
    
    @writable.setter
    def writable(self, writable: bool):
        """Sets the writable of this ProductionFlowItemProperty.


        :param writable: The writable of this ProductionFlowItemProperty.
        :type writable: bool
        """
        
        self._writable = writable
    
    @property
    def size(self) -> float:
        """Gets the size of this ProductionFlowItemProperty.


        :return: The size of this ProductionFlowItemProperty.
        :rtype: float
        """
        return self._size
    
    @size.setter
    def size(self, size: float):
        """Sets the size of this ProductionFlowItemProperty.


        :param size: The size of this ProductionFlowItemProperty.
        :type size: float
        """
        
        self._size = size
    
    @property
    def icon(self) -> str:
        """Gets the icon of this ProductionFlowItemProperty.


        :return: The icon of this ProductionFlowItemProperty.
        :rtype: str
        """
        return self._icon
    
    @icon.setter
    def icon(self, icon: str):
        """Sets the icon of this ProductionFlowItemProperty.


        :param icon: The icon of this ProductionFlowItemProperty.
        :type icon: str
        """
        
        self._icon = icon
    
    @property
    def error_threshold(self) -> float:
        """Gets the error_threshold of this ProductionFlowItemProperty.


        :return: The error_threshold of this ProductionFlowItemProperty.
        :rtype: float
        """
        return self._error_threshold
    
    @error_threshold.setter
    def error_threshold(self, error_threshold: float):
        """Sets the error_threshold of this ProductionFlowItemProperty.


        :param error_threshold: The error_threshold of this ProductionFlowItemProperty.
        :type error_threshold: float
        """
        
        self._error_threshold = error_threshold
    
    @property
    def display(self) -> bool:
        """Gets the display of this ProductionFlowItemProperty.


        :return: The display of this ProductionFlowItemProperty.
        :rtype: bool
        """
        return self._display
    
    @display.setter
    def display(self, display: bool):
        """Sets the display of this ProductionFlowItemProperty.


        :param display: The display of this ProductionFlowItemProperty.
        :type display: bool
        """
        
        self._display = display
